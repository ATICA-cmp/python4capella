    def __init__(self, java_object = None):
        if java_object is None:
            JavaObject.__init__(self, create_e_object("http://www.polarsys.org/capella/core/pa/" + capella_version(), "PhysicalComponent"))
            self.get_java_object().setNature(get_enum_literal("http://www.polarsys.org/capella/core/pa/" + capella_version(), "PhysicalComponentNature", "BEHAVIOR"))
        elif isinstance(java_object, BehaviorPC):
            JavaObject.__init__(self, java_object.get_java_object())
        else:
            if not java_object.isActor():
                if java_object.getNature().getName() == "UNSET":
                    raise AttributeError("Passed component is a physical component.")
                elif java_object.getNature().getName() == "BEHAVIOR":
                    JavaObject.__init__(self, java_object)
                elif java_object.getNature().getName() == "NODE":
                    raise AttributeError("Passed component is a node physical component.")
                else:
                    raise AttributeError("Passed component has unexpected nature.")
            else:
                raise AttributeError("Passed component is an actor.")


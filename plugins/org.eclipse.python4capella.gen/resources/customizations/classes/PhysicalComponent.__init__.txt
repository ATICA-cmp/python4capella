    def __init__(self, java_object = None):
        if java_object is None:
            JavaObject.__init__(self, create_e_object("http://www.polarsys.org/capella/core/pa/" + capella_version(), "PhysicalComponent"))
        elif isinstance(java_object, PhysicalComponent):
            JavaObject.__init__(self, java_object.get_java_object())
        elif get_e_classifier("http://www.polarsys.org/capella/core/pa/" + capella_version(), "PhysicalComponent").isInstance(java_object):
            JavaObject.__init__(self, java_object)
            if not java_object.isActor():
                if java_object.getNature().getName() == "UNSET":
                    JavaObject.__init__(self, java_object)
                elif java_object.getNature().getName() == "BEHAVIOR":
                    raise AttributeError("Passed component is a behavior physical component.")
                elif java_object.getNature().getName() == "NODE":
                    raise AttributeError("Passed component is a node physical component.")
            else:
                raise AttributeError("Passed component is an actor.")
        else:
            raise AttributeError("Passed object is not compatible with " + self.__class__.__name__ + ": " + str(java_object))

